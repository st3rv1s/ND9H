<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on maandag, augustus 05, 2024, 10:31 AM -->
<!-- MuClient version 5.07-pre -->

<!-- Plugin "NoDisarm9h" generated by Plugin Wizard -->

<muclient>
	<plugin
	name="NoDisarm9h"
	author="Kanaye"
	id="dcd64c70f7ba056a51e11939"
	language="Lua"
	purpose="Wield weapons after disarm"
	date_written="2024-08-05 10:31:11"
	requires="5.07"
	version="1.0"
	>
	
	</plugin>
	<!-- 
	Your weapon has turned to fire!  IT BURNS!
	Screaming in agony, you throw the weapon down!
	You stop wielding Axe of Aardwolf in your primary hand.
	
	Your weapon has turned to fire!  IT BURNS!
	Screaming in agony, you throw the weapon down!
	You stop wielding Test of Test in your off-hand.
	-->
	<aliases>
	</aliases>
	
	<triggers>
	<trigger 
		match="Your weapon has turned to fire!  IT BURNS!" 
		name="triggerEnableDisarm" enabled="y" group="triggerGroupQuest" omit_from_output="n" regexp="n" sequence="99" script="triggerEnableDisarm"> 
	</trigger>
	<trigger 
		match="^You stop wielding (?<weapon>.*) in your (?<wield>primary hand|off-hand)\.$" 
		name="triggerDisarmed" enabled="n" group="triggerGroupQuest" omit_from_output="n" regexp="y" sequence="99" script="triggerDisarmed"> 
	</trigger>  
	</triggers>
	
	<!--  Get our standard constants -->
	
	<include name="constants.lua"/>
	
	<!--  Script  -->
	<script>
	<![CDATA[
	--[[ External Resources ]]--
	dofile(GetInfo(60) .. "aardwolf_colors.lua") -- Used to support Aard Colors for the cnote() function
	require "gmcphelper"
	require 'serialize'
	
	Debug = false
	Prepend = "@D[@WKanaye@D]: @w"
	
	-- Basic print function that supports aard, xterm, and ANSI color codes [idea from Durel's Inventory script]
	function cnote(string) 
	AnsiNote(stylesToANSI(ColoursToStyles(string)))
	end 
	
	function dnote(str)
	if Debug then
		cnote("@R[DEBUG]: @w"..str.."@w")
	end
	end
	
	-- Utility function to scrub string of small words like "a", "an", "of", "the"
	function scrubString(input)
		-- Define a set of words to be removed
		local wordsToRemove = {
			["a"] = true,
			["an"] = true,
			["of"] = true,
			["the"] = true
		}
		-- Split the input string into words
		local words = {}
		for word in input:gmatch("%S+") do
			table.insert(words, word)
		end
		-- Filter out the unwanted words
		local filteredWords = {}
		for _, word in ipairs(words) do
			if not wordsToRemove[word:lower()] then
				table.insert(filteredWords, word)
			end
		end
		-- Reconstruct the string without the unwanted words
		return table.concat(filteredWords, " ")
	end
	
	-- Function to enable the re-wear trigger when disarmed in D8
	function triggerEnableDisarm( name, lines, args )
		dnote( ("%striggerEnableDisarm() was called. Turning on 'triggerDisarmed' trigger and listening for the weapon line."):format(Prepend) )
		EnableTrigger( "triggerDisarmed", true )
	end
	-- Function to determine weapon and wield position and to re-wear the weapon
    function triggerDisarmed(name, lines, args)
        dnote( ("%striggerDisarmed() was called. Processing weapon name and wield position."):format(Prepend) )
        weapon = scrubString(args.weapon)
        if args.wield == "primary hand" then
            Send( ("wield %s"):format(weapon) )
        elseif args.wield == "off-hand" then
            Send( ("second %s"):format(weapon) )
        end
        EnableTrigger("triggerDisarmed", false)
    end
	
	--[[ Functions to save and load the settings ]]--
	function SaveSettings()
		--SetVariable("SoundSettings", serialize.save_simple(SoundSettings))
	end
	function LoadSettings()
	--assert(loadstring("SoundSettings = "..GetVariable("SoundSettings"))) ()
	end
	function OnPluginInstall()
		OnPluginEnable()
	end
	function OnPluginEnable()
	--[[
	local settings = GetVariable("SoundSettings")
	if settings and settings ~= "" then
		assert(loadstring("SoundSettings = "..GetVariable("SoundSettings"))) ()
	else
		initializeSoundSettings()
	end
	if not SoundSettings.qmessage then
		SoundSettings.qmessage = "@D[@RQUEST@D]: @CIt is time to quest!!!@w"
	end
	COMMAND_SoundAdmin_Help()
	]]--
	end
	function OnHelp ()
	world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
	end
	]]>
	
	</script>

</muclient>
